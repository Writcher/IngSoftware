name: Pruebas
on:
  workflow_dispatch: #Esto nos permite ejecutar el workflow desde el menu actions de github.
  push:              #Ejecuta el workflow cuando se hace un push en la branch main.
    branches:
      - main
      - Develop
  pull_request:      #Ejecuta el workflow cuando se hace un pull request de la branch main.
    branches:
      - Develop
      - main

jobs:
  utesting:
    runs-on: ubuntu-latest
    steps:
    - name: Copiar codigo #Procura una copia del codigo que se encuentra en el repositorio sobre la cual trabajar en el workflow.
      uses: actions/checkout@v2
    - name: Preparar JDK #Prepara el Java Development Kit a utilizar para las pruebas.
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Compilar codigo #Compila el codigo usando el comando javac.
      run: javac -cp .:lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar JavaTest.java
    - name: Ejecutar las pruebas #Ejecuta las pruebas unitarias de la clase JavaTest.
      run: java -cp .:lib/junit-4.13.2.jar:lib/hamcrest-core-1.3.jar org.junit.runner.JUnitCore JavaTest

  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - name: Copiar codigo
        uses: actions/checkout@v2
      - name: Preparar JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Ejecutar Checkstyle     #Ejecuta checkstyle con el script run_checkstyle.sh (No es completamente necesario hacer un script, pero
        run: |                        #ya lo habia escrito antes de darme cuenta por lo que lo use de todas formas, pa no desperdiciar
          chmod +x ./checkstyle/run_checkstyle.sh
          ./checkstyle/run_checkstyle.sh

  checkformat:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3 # v2 minimum required
      - uses: axel-op/googlejavaformat-action@v3             
        with:                                                
          args: "--skip-sorting-imports --replace"        
          github-token: ${{ secrets.GITHUB_TOKEN }}
#Hasta aca anda!
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Preparar JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Debug Info
        run: |
          ls
      - name: Compilar codigo
        run: javac Main.java
      - name: Ejecutar codigo
        run: java Main
